*zettelkasten.txt*  zettelkasten.nvim

Author:  Furkan Uzumcu

INTRODUCTION                                                  *zettelkasten.nvim*

`zettelkasten.nvim` is a plugin to make it eaiser to use Zettelkasten note taking
system: https://zettelkasten.de/introduction/

It is meant to provide the following features in a way that is consistent with
Vim's own features:

1. Note ID competion
2. ID generation
3. Jumpting to references
4. Jumping to tags
5. Listing tags

All relevant options are set automatocally if they have not been set before.
If they were set, these are the options that you can use to get the best
experience: >

    setlocal tagfunc=v:lua.zettelkasten.tagfunc
    setlocal isfname+=-,:
    setlocal iskeyword+=:,-
    setlocal suffixesadd+=.md
    setlocal keywordprg=:ZkHover
    setlocal completefunc=v:lua.zettelkasten.completefunc

PREVIEWING NOTES                                     *zettelkasten-preview-notes*
================================================================================

To review a note, you can either use |K| mapping to execute |keywordprg| or
use any of the preview window tag mappings to open the note in a preview
window. Note that when the preview window commands are used (e.g |CTRL-W }|),
|preview-window| is used. If you want to customize the preview window, use
`preview_command` when setting up the plugin and rely on |K| command.

COMMANDS                                                  *zettelkasten-commands*
================================================================================

Global ~

ZkNew                                                                    *:ZkNew*

    Creates a new buffer with a markdown file type. If {notes_path} option was
    set with |zettelkasten-setup|, it'll change the working directory.


ZkHover {-preview} {-return-lines} {note_id}                           *:ZkHover*

    Implements |keywordprg|. This command is set to |keywordprg| option if
    |keywordprg| is not already set.

    If `-preview` is passed to the command, a preview window will be used to
    show the note contents.

    If `-return-lines` can only be used when `-preview` is used. When this
    argument is passed, this command will return the note content in a list
    instead of using `preview_command`.

    Example: >
        setlocal keywordprg=:ZkHover\ -preview
        setlocal keywordprg=:ZkHover\ -preview\ -return-lines

LUA                                                            *zettelkasten-lua*
================================================================================

setup({opts})                                                *zettelkasten-setup*

    Initialize the plugin.

    Parameters: ~
        {opts} (optional, table)
            - {notes_path} (optional, string): Defaults to an empty string. If
              provided, |:ZkNew| uses the notes path to set the working
              directory. If this is not set. you need to make sure that your
              working directory is your notes directory. Otherwise some
              features may not work.
            - {preview_command} (optional, string): The command to use to
              preview a note. This will be used with |:ZkHover -preview|
              command. The command must take one string argument as the name
              of the note file. This can be used to configure
              zettelkasten.nvim so the hover previews are (for example) shown
              in a hover window.

keyword_expr({cword}, {opts})                         *zettelkasten-keyword-expr*

    Returns a table that contains the context for the note with the given ID
    {cword}.

    Parameters: ~
        {cword} (string): The word under the cursor. If a note with the given
        ID cannot be found, returns an empty table.
        {opts} (optional, table)
            - {preview_note} (optional, boolean): If set to true,
              `preview_command` will be used to preview the note.
            - {return_lines} (optional, boolean): Only used when
              `preview_note` is set to `true`. When set, instead of using
              `preview_command`, it returns the note contents from the
              command.

    Returns: ~
        {table}

tagfunc({pattern}, {flags}, {info})                        *zettelkasten-tagfunc*

    Implements a |tagfunc|. This function is automatically set to the
    |tagfunc| option by the plugin.

    Returns: ~
        {table}

set_note_id({bufnr})                                  *zettelkasten-set-note-id*

    Prepends a note ID to the first line of the current buffer. It expects to
    find a markdown header in the first line.

    Parameters: ~
        {bufnr} (number): Current buffer, or another note buffer.

completefunc({base})                                  *zettelkasten-completefunc*

    Implements a |complete-function|. Given a {base} note ID or title, returns
    a list of notes matching notes.

    Parameters: ~
        {base} (string): Note ID or title.

ABOUT                                                        *zettelkasten-about*
================================================================================

Grab the latest version or report a bug on GitHub:

https://github.com/Furkanzmc/zettelkasten.nvim

vim:tw=80:colorcolumn=81:et:ft=help:norl:

